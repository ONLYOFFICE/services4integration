pipeline {
  agent {label 'ubuntu'}
  options {
    disableConcurrentBuilds()
    buildDiscarder (logRotator(numToKeepStr: '5', artifactNumToKeepStr: '5'))
  }  
  parameters {
    choice(name: 'Connector', choices: ['humhub','alfresco/standalone','chamilo'], description: '')
    string(name: 'st', defaultValue: 'latest', description: '-st, service_tag. Default: latest')
    string(name: 'cu', defaultValue: 'from_pipeline', description: '-cu, connector_url. Add custom url or will be used url from pipeline.')
    booleanParam (name:'EXECUTE', defaultValue: true, description: 'Run this item ?')
  }
    
  stages {
    stage ('Delete old VM') {
      when { expression { return env.EXECUTE == "true" } }
      steps {
        withCredentials([string(credentialsId: 'do_install_connector', variable: 'DO_TOKEN')]) {
          sh '''
            echo "Old VMs were deleted."
          '''
        }
      }
    }
    stage ('Create VM with connector') {
      when { 
        allOf{
          expression { return env.EXECUTE == "true" }
          expression { return env.Connector == "humhub" }
        }
      }
      steps {
        withCredentials([ string(credentialsId: 'do_install_connector', variable: 'DO_TOKEN') ]) 
        {
          sh '''
            #!/usr/bin/env bash

            if [[ ${Connector} == "humhub" ]]; then
              if [[ ${cu} == "from_pipeline" ]]; then
                connector_url='https://github.com/ONLYOFFICE/onlyoffice-humhub/releases/download/v2.4.0/onlyoffice.zip'
              else
                connector_url=${cu}
              fi
                
                date=$(date '+%Y%m%d%H%M');
                sed -i "s,%connector_url%,${connector_url},g" .jenkins/user-data.yml
                sed -i "s,%connector%,humhub,g" .jenkins/user-data.yml
                sed -i "s,%tag%,${st},g" .jenkins/user-data.yml

                curl -X POST -H "Content-Type: application/json" \
                -H "Authorization: Bearer ${DO_TOKEN}" \
                -d '{
                  "name":"'${Connector}-${date}'",
                  "region":"nyc3",
                  "size":"s-2vcpu-4gb",
                  "image":"ubuntu-20-04-x64",
                  "ssh_keys":[30223004,29633232,29102049,28963692,30876815,35168967],
                  "backups":false,
                  "ipv6":false,
                  "user_data":"'" $(cat .jenkins/user-data.yml) "'",
                  "private_networking":null,
                  "volumes": null,
                  "tags":["connectors"]}' \
                "https://api.digitalocean.com/v2/droplets" 
            fi
            
            echo "Connector ${Connector} created."
          '''
        }
      }
    }
  }
}
