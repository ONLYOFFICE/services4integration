version: '2.0'
services:
  db:
    image: mariadb:10.5
    container_name: seafile-mysql
    environment:
      - MYSQL_ROOT_PASSWORD=db_dev  # Requested, set the root's password of MySQL service.
      - MYSQL_LOG_CONSOLE=true
    volumes:
      - /opt/seafile-mysql/db:/var/lib/mysql  # Requested, specifies the path to MySQL data persistent store.
    networks:
      - seafile-net

  memcached:
    image: memcached:1.6
    container_name: seafile-memcached
    entrypoint: memcached -m 256
    networks:
      - seafile-net

  seafile:
    image: seafileltd/seafile-mc:${TAG}
    container_name: seafile
    volumes:
      - /opt/seafile-data:/shared   # Requested, specifies the path to Seafile data persistent store.
      - ./run.sh:/run.sh
    environment:
      - DB_HOST=db
      - DB_ROOT_PASSWD=db_dev  # Requested, the value shuold be root's password of MySQL service.
      - TIME_ZONE=Etc/UTC  # Optional, default is UTC. Should be uncomment and set to your local time zone.
      - SEAFILE_ADMIN_EMAIL=me@example.com # Specifies Seafile admin user, default is 'me@example.com'.
      - SEAFILE_ADMIN_PASSWORD=secret     # Specifies Seafile admin password, default is 'secret'.
      - SEAFILE_SERVER_LETSENCRYPT=false   # Whether to use https or not.
      - SEAFILE_SERVER_HOSTNAME=${APP_ADDR} # Specifies your host name if https is enabled.
      - SEAFILE_SERVER_SCHEME=${SCHEME}
      - ONLYOFFICE_JWT_SECRET=${JWT_SECRET}
    depends_on:
      - db
      - memcached
    networks:
      - seafile-net

  onlyoffice-document-server:
    container_name: onlyoffice-document-server
    image: onlyoffice/documentserver:${DS_TAG}
    restart: always
    environment:
      - ${JWT_ENV}
    networks:
      - seafile-net
    healthcheck:
      test: ["CMD", "curl", "-f", "-s", "http://localhost/healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 5

  nginx:
    container_name: nginx-server
    image: nginx
    restart: always
    ports:
      - 80:80
      - 443:443
    networks:
      - seafile-net
    volumes:
      - ../common/nginx_conf/local.conf:/etc/nginx/local.conf
      - ../common/nginx_conf/map.conf:/etc/nginx/map.conf
      - ../common/nginx_conf/${NGINX_CONF}:/etc/nginx/nginx.conf
      - ./app.conf:/etc/nginx/app.conf
      - /etc/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - seafile
networks:
  seafile-net
