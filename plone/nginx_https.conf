user www-data;
worker_processes 1;

error_log /var/log/nginx/error.log warn;
pid       /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {

    upstream backend {
        server backend:8080;
    }
    upstream frontend {
        server frontend:3000;
    }

    include      /etc/nginx/mime.types;
    include      /etc/nginx/map.conf;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    keepalive_timeout 65;

    server {
        listen 443 ssl http2;
        server_name test-apps.k8s.onlyoffice.fun;

        ssl_certificate /etc/nginx/ssl/fullchain.pem;
            ssl_certificate_key /etc/nginx/ssl/privkey.pem;
            ssl_session_timeout 1d;
            ssl_session_cache shared:MozSSL:10m;
            ssl_session_tickets off;

            ssl_protocols TLSv1.2 TLSv1.3;
            ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
            ssl_prefer_server_ciphers off;

            client_max_body_size 0;
            proxy_request_buffering off;
            proxy_buffering off;

        include /etc/nginx/local.conf;
        location ~ /\+\+api\+\+($|/.*) {
            rewrite ^/(\+\+api\+\+\/?)+($|/.*) /VirtualHostBase/http/$server_name/Plone/++api++/VirtualHostRoot/$2 break;
            proxy_pass http://backend;
        }

        location ~ / {
            location ~* \.(js|jsx|css|less|swf|eot|ttf|otf|woff|woff2)$ {
                add_header Cache-Control "public";
                expires +1y;
                proxy_pass http://frontend;
            }
            location ~* static.*\.(ico|jpg|jpeg|png|gif|svg)$ {
                add_header Cache-Control "public";
                expires +1y;
                proxy_pass http://frontend;
            }

            proxy_set_header        Host $host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;
            proxy_redirect http:// https://;
            proxy_pass http://frontend;
       }
    }

    server {
        listen       80;
        listen       [::]:80;
        server_name _;

        location / {
          return 301 https://$host:443$request_uri;
        }
    }
}
